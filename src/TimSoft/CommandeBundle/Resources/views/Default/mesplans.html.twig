{% extends 'Squelette.html.twig' %}

{% block Titre %}
    Portail web de TimSoft - Mon Planning
{% endblock %}

{% block Section %}
    <h1>
        Consulter Mon Planning
        <small></small>
    </h1>
{% endblock %}


{% block Navigation %}
    {#{% if AutorisationAcces('Consultercommandes' , Utilisateur) %}#}
    {#<li><a href="{{path('Consultercommandes')}}">Consulter la liste des commandes</a></li>#}
    {#{%endif%}#}
    <li class="breadcrumb-item active">Mon Planning</li>
{% endblock %}
{% block SideBar %}
{% endblock %}
{% block css %}
    {{ parent() }}
    {#    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet"/>#}
    {#    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.css"#}
    {#          rel="stylesheet"/>#}
{% endblock %}
{% block Contenu %}
    {#    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>#}
    {#    #}{#    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/core@4.3.1/main.min.css">#}
    {#    #}{#    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/bootstrap@4.3.0/main.min.css"/>#}
    {#    #}{#    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.1.0/main.min.css">#}
    {#    #}{#    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@4.1.0/main.min.css">#}
    {#    #}{#    <link href='https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css' rel='stylesheet'/>#}
    {#    #}{#    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/timeline@4.3.0/main.min.css"/>#}
    {#    #}{#    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/resource-timeline@4.3.0/main.min.css"/>#}
    {#    #}{#    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/daygrid@4.3.0/main.min.css"/>#}

    {#    <script src="https://unpkg.com/@fullcalendar/core@4.3.1/main.min.js"></script>#}
    {#    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@4.1.0/main.min.js"></script>#}
    {#    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.3.0/main.min.js"></script>#}
    {#    <script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>#}
    {#    <script src="https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js"></script>#}
    {#    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@4.1.0/main.min.js"></script>#}
    <script src="https://unpkg.com/@fullcalendar/core@4.3.1/locales-all.js"></script>
    {#    <script src="https://unpkg.com/@fullcalendar/list@4.3.0/main.min.js"></script>#}
    {#    <script src='http://fullcalendar.io/js/fullcalendar-2.1.1/lib/moment.min.js'></script>#}
    {#    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.js'></script>#}
    {#    <script src="https://unpkg.com/@fullcalendar/timeline@4.3.0/main.min.js"></script>#}
    {#    <script src="https://unpkg.com/@fullcalendar/resource-common@4.3.1/main.min.js"></script>#}
    {#    <script src="https://unpkg.com/@fullcalendar/resource-timeline@4.3.0/main.min.js"></script>#}

    {#    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-modal/2.2.5/js/bootstrap-modal.min.js"></script>#}
    <style>
        .fc-day-grid-event > .fc-content {
            white-space: normal;
        }

        .fc-event {
            /* force events to be one-line tall */
            white-space: normal !important;
            overflow: hidden;
        }

        /*.fc-event {*/
        /*height: 60px !important;*/
        /*}*/
    </style>

    <div class="col-md-12">
        <div class="card">
            {#            <div class="card-header with-border">#}
            {#                <h2 class="card-title" style="color:#1E5584">Mon Planning</h2>#}
            {#            </div>#}
            <div class="card-tools pull-center">
            </div>
            <div class="card-body">
                <div class="text-right">
                    <div align="right">
                        <a style="text-align: right" href="#" id="export" class="btn btn-default"
                           title="Télécharger le planning">
                            <i class="fas fa-download fa-2x"></i>
                        </a>
                    </div>
                    <div align="left">
                        <a href="#" id="addTaskButton">
                            <button class="btn btn-primary">Ajouter une activité</button>
                        </a>
                    </div>
                </div>
                <br>
                {#<button class="printBtn hidden-print">Print</button>#}
                <div id='calendar'></div>
            </div>
        </div>
    </div>
    {% include '@TimSoftCommande/Default/modal.html.twig' %}

    {#    {{ render(controller('TimSoftTasksBundle:TaskEvent:new')) }}#}
{% endblock %}
    {% block script %}
        {{ parent() }}
        {#        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>#}
        {#        <script src="https://unpkg.com/@fullcalendar/bootstrap@4.3.0/main.min.js"></script>#}

        {#        <script#}
        {#                src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"#}
        {#                integrity="sha256-T0Vest3yCU7pafRw9r+settMBX6JkKN06dqBnpQ8d30="#}
        {#                crossorigin="anonymous"></script>#}


        <script>
            $('.printBtn').on('click', function () {
                window.print();
            });

            function f() {
                $.map($(".fc-event"), function (n, i) {
                    if (n.id) {
                        $.ajax({
                            url: '{{ path('calcul') }}',
                            data: 'action=update&id=' + n.id,
                            type: "GET",
                            //  async: false,
                            success: function (data) {
                                console.log(data);
                                $('#' + n.id + '.cc').text(data + " Jours Restants");
                            },
                            error: function () {
                                alert("erreur lors de l'appel de l'url dans POST event/drop : contactez l'administrateur du site");
                            },
                        });
                    }
                });
            }

            document.addEventListener('DOMContentLoaded', function () {
                var app_user = {{ app.user.roleUtilisateur|json_encode()|raw }};
                var client;
                $('#container1').append('<br><select id="users1" class="form-control" style="width: 100%"></select>');
                $('#fullCalModal').on('hidden.bs.modal', function () {
                    $('input[name="allday"]').each(function () {
                        this.checked = false;
                    });
                    $(':input').each(function () {
                        $(this).attr("disabled", false);
                    });
                });
                $("#container").delegate("#users", "select2:select", function (e) {
                    console.log(this.value);
                    var planningid = $(".planning").attr('id');
                    $.ajax({
                        url: '{{ path('AccompagnementPlanning') }}',
                        data: 'action=update&idu=' + e.params.data.id + '&id=' + planningid + '&type=selecting',
                        type: "POST",
                        // async: false,
                        success: function (data) {
                        },
                        error: function () {
                            alert("Vous ne pouvez pas faire cette action");
                        },
                    });
                });
                $("#container").delegate("#users", "select2:unselect", function (e) {
                    console.log(e.params.data.id);
                    var planningid = $(".planning").attr('id');
                    $.ajax({
                        url: '{{ path('AccompagnementPlanning') }}',
                        data: 'action=update&idu=' + e.params.data.id + '&id=' + planningid + '&type=unselect',
                        type: "POST",
                        //  async: false,
                        success: function (data) {
                        },
                        error: function () {
                            alert("Vous ne pouvez pas faire cette action");
                        },
                    });
                });
                $('#container').append('<select id="users" class="form-control js-example-basic-multiple" multiple="multiple" style="width: 100%"></select>');
                $.ajax({
                    url: '{{ path('getAllUsers') }}',
                    //data: 'action=update&id=' + this.id,
                    type: "POST",
                    //  async: false,
                    success: function (data) {
                        $.each(data, function (i, item) {
                            $('#users').append($('<option>', {
                                value: item.id,
                                text: item.nomUtilisateur + ' ' + item.prenomUtilisateur
                            }));
                        });
                        console.log(data);
                    },
                    error: function () {
                        alert("Vous ne pouvez pas faire cette action");
                    },
                });
                var initialLocaleCode = 'fr';
                var Calendar = FullCalendar.Calendar;
                var calendarEl = document.getElementById('calendar');

                var calendar = new Calendar(calendarEl, {
                    draggable: true,
                    theme: true,
                    defaultView: 'dayGridWeek',
                    locale: initialLocaleCode,
                    firstDay: 1,
                    timeZone: 'local',
                    plugins: ['interaction', 'dayGrid', 'timeGrid', 'dayGrid', 'bootstrap'],
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,dayGridWeek,timeGridMonth,dayGridDay'
                    },
                    editable: (app_user === "ROLE_ADMIN"),
                    eventDurationEditable: false,
                    eventLimit: true, // when too many events in a day, show the popover
                    eventSources: [
                        "{{ path('list', {'user' : app.user.id }) }}",
                        '{{ path('taskevent_by_user',{'id': app.user.id}) }}'
                    ],
                    themeSystem: 'themeSystem',
                    minTime: '08:30:00',
                    maxTime: '18:30:00',
                    allDay: true,
                    eventDrop: function (event) {
                        var start = new Date(event.event.start);
                        var end = new Date(event.event.end);
                        if (event.newResource) {
                            var xhr = $.ajax({
                                url: '{{ path('appBundle_drop') }}',
                                data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.end) + '&id=' + event.event.id + '&all_day=' + event.event.allDay
                                    + '&User=' + event.newResource.id,
                                type: "POST",
                                //  async: false,
                                success: function (data) {
                                    calendar.refetchEvents();
                                },
                                error: function () {
                                    alert("Vous ne pouvez pas faire cette action");
                                    calendar.refetchEvents();
                                },
                            });
                        } else {
                            var xhr = $.ajax({
                                url: '{{ path('appBundle_drop') }}',
                                data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.end) + '&id=' + event.event.id + '&all_day=' + event.event.allDay
                                    + '&User=' + null,
                                type: "POST",
                                success: function (data) {
                                    calendar.refetchEvents();
                                },
                                error: function () {
                                    calendar.refetchEvents();
                                    alert("Vous ne pouvez pas faire cette action");
                                },
                            });
                        }
                    },
                    forceEventDuration: true,
                    eventClick: function (event) {
                        if (event.event.extendedProps.type != 'TaskEvent') {
                            var xhr = $.ajax({
                                url: '{{ path('plans') }}',
                                data: 'action=update&id=' + event.event.id,
                                type: "POST",
                                async: false,
                                success: function (data) {
                                    $.ajax({
                                        url: '{{ path('getUsersBySociete') }}',
                                        data: 'action=update&id=' + data.Client.id,
                                        type: "POST",
                                        async: false,
                                        success: function (data) {
                                            console.log(data);
                                            $('#users1').empty();
                                            $.each(data, function (i, item) {
                                                console.log(item);
                                                console.log("--------------------");
                                                $('#users1').append('<option value="' + item.id + '">' + item.nomUtilisateur + ' ' + item.prenomUtilisateur + '</option>');
                                            });
                                            // $('#users1').val(null).trigger('change')
                                        },
                                        error: function () {
                                            alert("Vous ne pouvez pas faire cette action");
                                        },
                                    });
                                    CalendarModalData(data);
                                },
                                error: function () {
                                    alert("erreur lors de l'appel de l'url dans POST event/drop : contactez l'administrateur du site");
                                }

                                ,
                            });
                        } else {
                            $.ajax({
                                url: Routing.generate('taskevent_edit', {id: event.event.id}),
                                method: 'post',
                                // dataType: 'json',
                                success: function (data) {
                                    $("#renderEdit").html(data);
                                    $('#editTask').modal();
                                    $('form[name="edit"]').submit(function () {
                                        calendar.refetchEvents();
                                    });
                                },
                            });
                        }
                    },
                    eventResize: function (event) {
                        console.log(event.event.end);
                        var xhr = $.ajax({
                            url: '{{ path('appBundle_resize') }}',
                            data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.end) + '&id=' + event.event.id + '&all_day=' + event.event.allDay,
                            type: "POST",
                            // async: false,
                            success: function (data) {
                                calendar.refetchEvents();
                                f();
                            },
                            error: function () {
                                calendar.refetchEvents();
                                alert("Vous ne pouvez pas faire cette action");
                            },
                        });
                    },
                    eventTimeFormat: { // like '14:30:00'
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit',
                        hour12: false

                    },
                    navLinks: true,
                    displayEventTime: false,
                    eventRender: function (event, element, view) {
                        console.log(event);
                        if (event.view.type === 'dayGridWeek') {
                            calendar.height = 450;
                            $(event.el).height('auto');
                            $(event.el).find('.fc-title').prepend('<b>Client: </b>');
                            if (event.event.extendedProps.type == 'TaskEvent') {
                                $(event.el).append('<b>Task:</b> ' + event.event.extendedProps.libelle +
                                    '<br><b>Lieu: </b>' + event.event.extendedProps.Lieu);
                            } else {
                                $(event.el).append('<b>Libellé:</b> ' + event.event.extendedProps.libelle +
                                    '<br><b>Lieu: </b>' + event.event.extendedProps.Lieu);
                            }
                            if (event.event.allDay === false) {
                                if (moment(event.event.start).hours() > 13) {
                                    $(event.el).append('<br><b>Après-midi</b>');
                                } else {
                                    $(event.el).append('<br><b>Matin</b>');
                                }
                            }
                        } else if (event.view.type === 'dayGridMonth' && event.event.allDay) {

                            $(event.el).height('auto');
                            $(event.el).append(event.event.extendedProps.libelle);
                        }
                    },
                });
                calendar.setOption('locale', 'fr');
                calendar.render();
                $('input:radio[name=Facturation]').change(function () {
                    if (this.value === 'Gratuit') {
                        requestAjax('facturation', $('.planning').attr('id'))
                    } else if (this.value === 'Facturé') {
                        requestAjax('facturation', $('.planning').attr('id'))

                    }
                });
                $('input:radio[name=accompagnements]').change(function () {
                    if (this.value === 'Oui') {
                        $('#users').val(null).trigger("change");
                        $("#container").show()
                    } else if (this.value === 'Non') {
                        requestAjax('accompagnements', $('.planning').attr('id'));
                        $("#container").hide()
                    }
                });
                $("#Statut").change(function () {
                    requestAjax('Statut', $('.planning').attr('id'), this.value);
                });
                $('input:radio[name=Lieu]').change(function () {
                    if (this.value === 'SurSite') {
                        requestAjax('Lieu', $('.planning').attr('id'), 'Sur Site')
                    } else if (this.value === 'aDistance') {
                        requestAjax('Lieu', $('.planning').attr('id'), 'à distance')

                    }
                });
                f();
                $('.js-example-basic-multiple').select2({
                    tags: true,
                });
                $("#users1").select2({
                    placeholder: "Choisir un utilisateur",
                    allowClear: true,
                    tags: true,
                });

                function requestAjax(type, id, value) {

                }

                $("#Sauvegarder").click(function () {
                    console.log($("#datepicker").datepicker('getDate'));
                    statut = $('#Statut').val();
                    lieu = $('input:radio[name=Lieu]:checked').val();
                    facturation = $('input:radio[name=Facturation]:checked').val();
                    userClient = $("#users1").val();
                    accompagnements = $('input:radio[name=accompagnements]:checked').val();
                    commentaire = $('#textArea').val();
                    end = $('#endTime').val();
                    start = $('#startTime').val();
                    var dateStart = moment(start).format('DD-MM-YYYY');
                    var dateEnd = moment(end).format('DD-MM-YYYY');

                    var matin = $("#Matin:checked").val();
                    var midi = $("#Midi:checked").val();
                    var allday = false;
                    if (midi && matin) {
                        allday = true
                    } else if (matin) {
                        allday = matin;
                    } else {
                        allday = midi;
                    }
                    $.ajax({
                        url: '{{ path('ModificationPlanning') }}',
                        data: 'action=update&id=' + $('.planning').attr('id') + '&statut=' + statut + '&facturation=' + facturation + '&userClient=' + userClient + '&accompagnements=' + accompagnements
                            + '&lieu=' + lieu + '&commentaire=' + commentaire + '&start=' + start + '&end=' + start + '&allday=' + allday,
                        type: "POST",
                        success: function (data) {
                            calendar.refetchEvents();
                            // console.log(data);
                        },
                        error: function () {
                            alert("Vous ne pouvez pas faire cette action");
                        },
                    });
                });
                $("#Supprimer").click(function () {
                    $.ajax({
                        url: '{{ path('deletePlanning') }}',
                        data: 'action=update&id=' + $('.planning').attr('id'),
                        type: "POST",
                        //   async: false,
                        success: function (data) {
                            calendar.refetchEvents();
                            console.log(data);
                        },
                        error: function () {
                            alert("Vous ne pouvez pas faire cette action");
                        },
                    });
                });
                $("#commentaire").click(function () {
                    $('#textArea').show()
                });

                $("#export").click(function (e) {
                    e.preventDefault();
                    var exportation = [];
                    var events = calendar.getEvents();
                    var userId = {{ app.user.id }};
                    $.each(events, function (key, event) {
                        var resourceIds = event._def.resourceIds;
                        if (userId == resourceIds[0]) {
                            if ((calendar.view.currentStart <= event.start) && (calendar.view.currentEnd > event.start)) {
                                exportation.push(event.id);
                            }
                        }
                    });
                    $.ajax({
                        type: "GET",
                        url: '{{ path('telechargementPlanning') }}',
                        data: {
                            ids: exportation,
                            start: moment(calendar.view.currentStart).format('MM/DD/YYYY'),
                            end: moment(calendar.view.currentEnd).subtract(1, 'days').format('MM/DD/YYYY'),
                        },
                        success: function (data) {
                            window.location = this.url;
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Votre fichier est en cours de téléchargement!',
                                showConfirmButton: false,
                                timer: 2500
                            })
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Quelque chose c\'est mal passé. Merci d\'essayer plus tard',
                            })
                        }
                    });
                });
                $('#addTaskButton').on('click', function (e) {
                    e.preventDefault();
                    $.ajax({
                        url: '{{ path('taskevent_new') }}',
                        method: 'post',
                        // dataType: 'json',
                        success: function (data) {
                            $('#renderEdit').html(data);
                            $('#addTask').modal();
                            $('form[name="new"]').submit(function () {
                                calendar.refetchEvents();
                            });
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_utilisateur').val({{ app.user.id }}); // Select the option with a value of '1'
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_utilisateur').trigger('change'); // Notify any JS components that the value changed
                        },
                    });
                });

            });

            function formatDate(date) {
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [year, month, day].join('-');
            }

            function GetNow(currentdate) {
                var cc = currentdate.getFullYear() + "-"
                    + (currentdate.getMonth() + 1) + "-"
                    + currentdate.getDate() + " "
                    + currentdate.getHours() + ":"
                    + currentdate.getMinutes() + ":"
                    + currentdate.getSeconds();
                return cc;
            }
        </script>
    {% endblock %}
