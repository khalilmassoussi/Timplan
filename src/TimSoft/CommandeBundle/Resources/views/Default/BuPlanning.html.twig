{% extends 'Squelette.html.twig' %}

{% block Titre %}
    Portail web de TimSoft - Les Plannings Par BU
{% endblock %}

{% block Section %}
    <h1>
        Les plannings par BU
        <small></small>
    </h1>
{% endblock %}

{% block Navigation %}
    <li class="breadcrumb-item active">Planning par BU</li>
{% endblock %}

{% block SideBar %}
{% endblock %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/timeline@4.3.0/main.min.css"/>
    <link rel="stylesheet" href="https://unpkg.com/@fullcalendar/resource-timeline@4.3.0/main.min.css"/>
{% endblock %}

{% block Contenu %}
    <style>
        .select2-search__field {
            text-align: center;
        }

        .fc-day-grid-event > .fc-content {
            white-space: normal;
        }

        .fc-event {
            /* force events to be one-line tall */
            white-space: normal !important;
            overflow: hidden;
            cursor: pointer;
        }

        .fc-timeline-event {
            display: block;
        }

        .fc-title-wrap > .fc-title {
            white-space: normal;
            /*width: 75%;*/
        }

        /*.fc-event {*/
        /*height: 60px !important;*/
        /*}*/
    </style>
    <style>
        #external-events {
            /*position: fixed;*/
            z-index: 2;
            top: 20px;
            left: 20px;
            width: 150px;
            padding: 0 10px;
            border: 1px solid #ccc;
            background: #eee;
        }

        /*.fc-today {*/
        /*    background-color: #d1ecf1;*/
        /*}*/

        #external-events .fc-event {
            margin: 1em 0;
            cursor: move;
        }

        #calendar-container {
            position: relative;
            z-index: 1;
            /*margin-left: 200px;*/
        }

        #calendar {
            /*max-width: 900px;*/
            /*margin: 20px auto;*/
        }

    </style>
    <div class="col-md-12">
        <div class="card card-outline card-primary">
            <div class="card-header">
                <h3 class="card-title">
                    <a href="#" id="addTaskButton">
                        <button class="btn btn-primary">Ajouter une Task</button>
                    </a>
                </h3>
                <div class="card-tools">
                    <a href="#" id="export" class="btn btn-info btn-sm"
                       title="Télécharger le planning">
                        <i class="fas fa-download fa-2x"></i>
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="col-md-6 offset-md-3">
                    <div class="card card-outline card-primary bg-gradient-light">
                        <div class="card-body">
                            <div align="center" class="form-group">
                                <select id="bus" class="form-control select2"
                                        style="width: 100%;">
                                    <option></option>
                                    {% for bu in bus %}
                                        <option value="{{ bu.id }}">{{ bu.libelle }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div align="center" class="form-group">
                                <select id="usersBu" class="form-control select2 select2-hidden-accessible"
                                        multiple="multiple"
                                        style="width: 100%;" data-placeholder="Choisir un utilisateur">
                                    <option></option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12" align="center">
                    <div id='calendar'></div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
    {% block script %}
        {{ parent() }}
        {#<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>#}
        {#<script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.3.1/main.min.js"></script>#}
        <script src="https://unpkg.com/@fullcalendar/core@4.3.1/locales-all.js"></script>
        {#<script src="https://unpkg.com/@fullcalendar/list@4.3.0/main.min.js"></script>#}
        {#<script src="https://unpkg.com/@fullcalendar/timeline@4.3.0/main.min.js"></script>#}
        {#<script src="https://unpkg.com/@fullcalendar/resource-common@4.3.1/main.min.js"></script>#}
        {#<script src="https://unpkg.com/@fullcalendar/resource-timeline@4.3.0/main.min.js"></script>#}
        {#<script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>#}
        {#<script src="https://unpkg.com/tooltip.js/dist/umd/tooltip.min.js"></script>#}
        {#<script src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/moment/main.js'></script>#}
        <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
        <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>
        {#<script src="https://unpkg.com/@fullcalendar/bootstrap@4.3.0/main.min.js"></script>#}
        <script>
            var resource;
            var users = [];
            var byUser = [];
            document.addEventListener('DOMContentLoaded', function () {
                var app_user = {{ app.user.roleUtilisateur|json_encode()|raw }};
                var client;
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    plugins: ['interaction', 'resourceTimeline', 'bootstrap'],
                    schedulerLicenseKey: '0809399630-fcs-1571406797',
                    locale: 'fr',
                    height: 500,
                    header: {
                        left: 'today prev,next',
                        center: 'title',
                        right: 'timelineMyWeek,resourceTimelineDay'
                    },
                    themeSystem: 'themeSystem',
                    eventSources: [
                        '{{ path('allPlans') }}',
                        '{{ path('taskevent_index') }}'
                    ],
                    editable: false,
                    eventDurationEditable: false,
                    resourceLabelText: 'Les Consultants',
                    resourceText: function (resource) {
                        return resource.title;
                    },
                    resourceAreaWidth: '20%',
                    resources: function (fetchInfo, successCallback, failureCallback) {
                        getResources(function (resources) {
                            successCallback(resources);
                        });
                    },
                    resourceRender: function (info) {
                    },
                    eventClick: function (event) {
                        var autorise = {{ (AutorisationAcces('modifTaskEvent' , app.user))|json_encode()|raw }};
                        if (event.event.extendedProps.type !== 'TaskEvent') {
                            console.log(event);
                            editPlanningModal(event, calendar);
                        } else {
                            editTaskEvent(event, calendar);
                        }
                    },
                    defaultView: 'timelineMyWeek',
                    views:
                        {
                            timelineMyWeek: {
                                type: 'resourceTimelineMonth',
                                slotDuration:
                                    {
                                        days: 1
                                    },
                            },
                        },
                    displayEventTime: false,
                    slotWidth: 150,
                    eventDataTransform: function (event) {
                        if (event.allDay) {
                            event.end = moment(event.end).add(1, 'day').format('YYYY-MM-DD');
                        }
                        return event;
                    },
                    eventRender: function (event, element, view) {
                        // console.log(event.event.start);
                        // console.log(event.event.end);
                        if (event.view.type === 'timelineMyWeek' && event.event.allDay) {
                            if (event.event.extendedProps.type != 'TaskEvent') {
                                $(event.el).height('auto');
                                $(event.el).find('.fc-title').prepend('<b>Client: </b>');
                                $(event.el).append('<br><span><b>Libellé: </b>' + event.event.extendedProps.libelle + '</span>');
                            }
                        }
                        if (event.event.extendedProps.type == 'TaskEvent') {
                            $(event.el).find('.fc-title').css('width', '75%');
                            if (event.event.allDay === false) {
                                $(event.el).height('auto');

                                $(event.el).find('.fc-title').prepend('<b>Client: </b>');
                                $(event.el).append('<br><span><b>Task: </b>' + event.event.extendedProps.task + '</span>');
                                $(event.el).append('<div><b>Heure: </b>' + moment(event.event.start).format("HH:mm") + '</div>');
                            } else {
                                $(event.el).height('auto');
                                $(event.el).find('.fc-title').prepend('<b>Client: </b>');
                                $(event.el).append('<br><span><b>Task: </b>' + event.event.extendedProps.task + '</span>');

                            }
                            if (event.event.extendedProps.etiquette == 'Urgent') {
                                $(event.el).append('<div><b>Etiquette: </b> <span class="badge bg-danger">' + event.event.extendedProps.etiquette + '</span></div>');
                            } else if (event.event.extendedProps.etiquette == 'Peu') {
                                $(event.el).append('<div><b>Etiquette: </b> <span class="badge bg-light">' + event.event.extendedProps.etiquette + '</span></div>');
                            } else if (event.event.extendedProps.etiquette == 'Moyen') {
                                $(event.el).append('<div><b>Etiquette: </b> <span class="badge bg-indigo">' + event.event.extendedProps.etiquette + '</span></div>');
                            } else if (event.event.extendedProps.etiquette == 'Important') {
                                $(event.el).append('<div><b>Etiquette: </b> <span class="badge bg-warning">' + event.event.extendedProps.etiquette + '</span></div>');
                            }
                            $(event.el).append('<div class="ribbon-wrapper"><div class="ribbon">' + event.event.extendedProps.Statut + '</div></div>');
                            if (event.event.extendedProps.Statut === 'To DO') {
                                $(event.el).find('div.ribbon').each(function (index) {
                                    $(this).addClass('bg-warning');
                                    $(this).css('font-size', '80%');

                                });
                            } else if (event.event.extendedProps.Statut === 'Bloqué') {
                                $(event.el).find('div.ribbon').each(function (index) {
                                    $(this).addClass('bg-danger');
                                    // $(this).css('font-size', '0.6vw');

                                });
                            } else if (event.event.extendedProps.Statut === 'In Progress') {
                                $(event.el).find('div.ribbon').each(function (index) {
                                    $(this).addClass('bg-navy');
                                    $(this).css('font-size', '0.6vw');

                                });
                            } else if (event.event.extendedProps.Statut === 'Done') {
                                $(event.el).find('div.ribbon').each(function (index) {
                                    $(this).addClass('bg-success');
                                    // $(this).css('font-size', '0.6vw');

                                });
                            }
                        } else {
                            if (event.event.allDay === false) {
                                $(event.el).find('.fc-title').prepend('<b>Client: </b>');
                                $(event.el).append('<br><span><b>Libellé: </b>' + event.event.extendedProps.libelle + '</span>');
                                if (moment(event.event.start).hours() > 13) {
                                    $(event.el).append('<br><b>Après-midi</b>');
                                } else {
                                    $(event.el).append('<br><b>Matin</b>');
                                }
                            }
                            $(event.el).append('<br><b>Lieu: </b>' + event.event.extendedProps.Lieu);
                        }
                        // calendar.setOption('height', '450');
                    },
                    eventResize: function (event) {
                        console.log(event.event.end);
                        var xhr = $.ajax({
                            url: '{{ path('appBundle_resize') }}',
                            data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.end) + '&id=' + event.event.id + '&all_day=' + event.event.allDay,
                            type: "POST",
                            // async: false,
                            success: function (data) {
                                calendar.refetchEvents();
                                f();
                            },
                            error: function () {
                                calendar.refetchEvents();
                                alert("Vous ne pouvez pas faire cette action");
                            },
                        });
                    },
                    eventDrop: function (event) {
                        var start = new Date(event.event.start);
                        var end = new Date(event.event.end);
                        console.log(GetNow(event.event.start));
                        console.log(event);
                        if (event.newResource) {
                            var xhr = $.ajax({
                                url: '{{ path('appBundle_drop') }}',
                                data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.start) + '&id=' + event.event.id + '&all_day=' + event.event.allDay
                                    + '&User=' + event.newResource.id,
                                type: "POST",
                                //  async: false,
                                success: function (data) {
                                    calendar.refetchEvents();
                                },
                                error: function () {
                                    alert("Vous ne pouvez pas faire cette action");
                                    calendar.refetchEvents();
                                },
                            });
                        } else {
                            var xhr = $.ajax({
                                url: '{{ path('appBundle_drop') }}',
                                data: 'action=update&title=' + event.event.title + '&start=' + GetNow(event.event.start) + '&end=' + GetNow(event.event.start) + '&id=' + event.event.id + '&all_day=' + event.event.allDay
                                    + '&User=' + null,
                                type: "POST",
                                success: function (data) {
                                    calendar.refetchEvents();
                                },
                                error: function () {
                                    calendar.refetchEvents();
                                    alert("Vous ne pouvez pas faire cette action");
                                },
                            });
                        }
                    },
                });

                calendar.render();

                function getResources(handleData) {
                    if (byUser.length == 0) {
                        $.ajax({
                            url: '{{ path('findByBus') }}',
                            data: {
                                id: resource //dynamically get the current selected option from the dropdown
                            },
                            dataType: "json",
                            success: function (data) {
                                $.each(data, function (key, value) {
                                    users.push(value);
                                });
                                handleData(data);
                            }
                        });
                    }
                    if (byUser.length > 0) {
                        var x = [];
                        $.each(users, function (key, value) {
                            $.each(byUser, function (key, id) {
                                if (value.id == id) {
                                    x.push(value);
                                }
                            });
                            handleData(x);
                        });
                    }
                }

                $("#bus").on('change', function () {
                    byUser = [];
                    console.log(byUser);
                    $('#usersBu').empty();
                    $.ajax({
                        url: '{{ path('findByBus') }}',
                        data: {
                            id: this.value //dynamically get the current selected option from the dropdown
                        },
                        dataType: "json",
                        success: function (data) {
                            $('#usersBu').append($("<option />").val(null).text(null));
                            $.each(data, function (key, value) {
                                // console.log(value.prenomUtilisateur);
                                $('#usersBu').append($("<option />").val(value.id).text(value.prenomUtilisateur + ' ' + value.nomUtilisateur));
                            });
                        }
                    });
                    resource = this.value;
                    calendar.refetchResources();
                });
                $("#usersBu").change(function () {
                    byUser = $("#usersBu").val();
                    calendar.refetchResources();
                });

                $('#users').select2({
                    placeholder: "Selectionner",
                    tags: true,
                });

                $("#export").click(function (e) {
                    e.preventDefault();
                    if ($('#bus').val()) {
                        var exportation = [];
                        resources = calendar.getResources();
                        var events = calendar.getEvents();
                        $.each(events, function (key, event) {
                            var resourceIds = event._def.resourceIds;
                            $.each(resources, function (key, resource) {
                                if (resource.id === resourceIds[0] && event.extendedProps.type !== 'TaskEvent') {
                                    if ((calendar.view.currentStart <= event.start) && (calendar.view.currentEnd > event.start)) {
                                        exportation.push(event.id);
                                    }
                                }
                            });

                        });
                        $.ajax({
                            type: "GET",
                            url: '{{ path('telechargementPlanning') }}',
                            data: {
                                ids: exportation,
                                start: moment(calendar.view.currentStart).format('MM/DD/YYYY'),
                                end: moment(calendar.view.currentEnd).subtract(1, 'days').format('MM/DD/YYYY'),
                            },
                            success: function (data) {
                                window.location = this.url;
                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Votre fichier est en cours de téléchargement!',
                                    showConfirmButton: false,
                                    timer: 2500
                                })
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Quelque chose c\'est mal passé. Merci d\'essayer plus tard',
                                })
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Attention...',
                            text: 'Veuillez choisir le BU!',
                            showCloseButton: true,
                        })
                    }
                });

                $('#addTaskButton').on('click', function (e) {
                    e.preventDefault();
                    $.ajax({
                        url: '{{ path('taskevent_new') }}',
                        method: 'post',
                        success: function (data) {
                            $('#renderEdit').html(data);
                            $('#addTask').modal();
                            $('form[name="new"]').submit(function () {
                                calendar.refetchEvents();
                            });
                        },
                    });
                });
            });

            $('#calendar').css('font-size', '17px');
            $('#bus').select2({
                placeholder: 'Choisir un BU',
                allowClear: true
            });
            $('#usersBu').select2({
                tags: true,
            });

            function GetNow(currentdate) {
                var cc = currentdate.getFullYear() + "-"
                    + (currentdate.getMonth() + 1) + "-"
                    + currentdate.getDate() + " "
                    + currentdate.getHours() + ":"
                    + currentdate.getMinutes() + ":"
                    + currentdate.getSeconds();
                return cc;
            }
        </script>

    {% endblock %}
