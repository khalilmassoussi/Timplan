<style>
    .table td, .table th {
        padding: .49rem;
    }

    .header {
        font-weight: bold;
    }
</style>
<div id="addTask" class="modal fade">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-gradient-light">
                <h5 id="eventInfo" class="modal-title">Ajouter un Task</h5>
                <button type="button" class="close" data-dismiss="modal" id="close"><span
                            aria-hidden="true">×</span> <span
                            class="sr-only">close</span></button>
            </div>{{ form_start(form, {'name':'new', 'method' : 'post', 'action': path('taskevent_new') }) }}
            <div id="modalBody" class="modal-body">
                <div class="card bg-gradient-light card-outline card-primary">
                    <div class="card-body">
                        <table class="table table-borderless table-sm">
                            <tr>
                                <td>Type</td>
                                <td>
                                    <div class="form-group">
                                        {% for key, allDayItem in form.allDay %}
                                            <div class="form-check">
                                                {{ form_widget(allDayItem, {'attr': {'class': 'form-check-input'}}) }}
                                                {{ form_label(allDayItem) }}
                                            </div>
                                        {% endfor %}
                                    </div>
                                </td>
                                <td></td>
                            </tr>
                            <tr>
                                <td>Date</td>
                                <td>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                                        </div>
                                        {{ form_errors(form) }}
                                        {{ form_widget(form.start, {'attr': {'class': 'date form-control' , 'autocomplete': 'off'}}) }}
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                                        </div>{{ form_widget(form.end, {'attr': {'class': 'date form-control', 'autocomplete': 'off'}}) }}
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>Assigner à</td>
                                <td>{{ form_widget(form.utilisateur, {'attr': {'class': 'form-control'}}) }}</td>
                                <td>{{ form_widget(form.client, {'attr': {'class': 'form-control'}}) }}</td>
                            </tr>
                            <tr>
                                <td>Task</td>
                                <td>{{ form_widget(form.activite, {'attr': {'class': 'form-control'}}) }}</td>
                                <td>{{ form_widget(form.task, {'attr': {'class': 'form-control'}}) }}</td>
                            </tr>
                            <tr>
                                <td>Statut</td>
                                <td>{{ form_widget(form.statut, {'attr': {'class': 'form-control'}}) }}</td>
                                <td>{{ form_widget(form.motif, {'attr': {'class': 'form-control'}}) }}</td>
                            </tr>
                            <tr>
                                <td>Étiquette/Site</td>
                                <td> {{ form_widget(form.etiquette, {'attr': {'class': 'form-control'}}) }}</td>
                                <td>{{ form_widget(form.site, {'attr': {'class': 'form-control'}}) }}</td>
                            </tr>
                            <tr>
                                <td>Progression/Rapport</td>
                                <td>
                                    <div class="form-group">
                                        {% for key, allDayItem in form.progression %}
                                            <span>
                                                {{ form_widget(allDayItem) }}
                                               <span class="badge"
                                                     style="font-size: 15px"> {{ form_label(allDayItem) }}</span>
                                            </span>
                                        {% endfor %}
                                    </div>
                                </td>
                                <td>{{ form_widget(form.rapport, {'attr': {'class': 'form-control'}}) }}</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-gradient-light">
                <button type="submit" class="btn btn-primary"><i class="fas fa-save fa-lg"></i></button>
            </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>
<script>
    var $activive = $('#timsoft_tasksbundle_taskevent_activite');
    // When sport gets selected ...
    $activive.change(function () {
        // ... retrieve the corresponding form.
        var $form = $(this).closest('form');
        // Simulate form data, but only include the selected sport value.
        var data = {};
        data[$activive.attr('name')] = $activive.val();
        // Submit data via AJAX to the form's action path.
        $.ajax({
            url: $form.attr('action'),
            type: $form.attr('method'),
            data: data,
            success: function (html) {
                // Replace current position field ...
                $('#timsoft_tasksbundle_taskevent_task').replaceWith(
                    // ... with the returned one from the AJAX response.
                    $(html).find('#timsoft_tasksbundle_taskevent_task')
                );
                // Position field now displays the appropriate positions.
            }
        });
    });
</script>
<script>
    $('form[name="new"]').on('submit', function (event) {
        event.preventDefault();
        console.log($('form[name="new"] #timsoft_tasksbundle_taskevent_start').val());
        if (new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue')) || ($('form[name="new"] #timsoft_tasksbundle_taskevent_start').val() == '' && $('form[name="new"] #timsoft_tasksbundle_taskevent_end').val() == '')) {
            // alert('Date non valable, veuillez la vérifier et réessayer');
            Swal.fire({
                icon: 'warning',
                title: 'Oops...',
                text: 'Date non valable, veuillez la vérifier et réessayer',
            });
            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
        } else {
            Swal.fire({
                title: 'Veuillez Patienter !',
                html: 'Enregistrement de données..',// add html attribute if you want or remove
                allowOutsideClick: false,
                onBeforeOpen: () => {
                    Swal.showLoading()
                },
            });
            // event.preventDefault();
            var cc = new FormData(this);
            var url = "{{ path('taskevent_new') }}";
            var formSerialize = $(this).serialize();
            $.ajax({
                url: url,
                data: formSerialize,
                type: 'POST',
                dataType: "json",
            }).done(function (response) {
                Swal.close();
                if (response.taskExist) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Il existe déjà une autre Task ayant un même créneau!',
                    })
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Task ajoutée avec succès !',
                        // text: 'Il existe déjà une autre Task ayant un même créneau!',
                    });
                    $('#addTask').modal('hide');
                }
            });
        }

    });
    var slider = $('form[name="new"] #timsoft_tasksbundle_taskevent_progression');
    $(document).ready(function () {
        // you may need to change this code if you are not using Bootstrap Datepicker
        $.datetimepicker.setLocale('fr');
        $('form[name="new"] #timsoft_tasksbundle_taskevent_start').attr('autocomplete', 'off');
        $('form[name="new"] #timsoft_tasksbundle_taskevent_utilisateur').select2({
            placeholder: 'Assigner à'
        });
        $('form[name="new"] #timsoft_tasksbundle_taskevent_client').select2({
            placeholder: 'Choisir le client'
        });
        $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[allDay]"]').change(function () {
            if (this.value == 1) {
                $('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                    format: 'd F Y',
                    timepicker: false,
                    onShow: function (ct) {
                        this.setOptions({
                            maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false,
                            formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        console.log($input.val());
                        if (new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
                $('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                    format: 'd F Y',
                    timepicker: false,
                    onShow: function (ct) {
                        this.setOptions({
                            minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false,
                            formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
            } else {
                $('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                    format: 'd F Y H:i',
                    timepicker: true,
                    step: 30,
                    onShow: function (ct) {
                        this.setOptions({
                            maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false
                            , formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });

                $('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                    format: 'd F Y H:i',
                    timepicker: true,
                    step: 30,
                    onShow: function (ct) {
                        this.setOptions({
                            minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false
                            , formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="new"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }

                });
            }
        });
        $('form[name="new"] #timsoft_tasksbundle_taskevent_motif').parent().hide();
        $('form[name="new"] #timsoft_tasksbundle_taskevent_statut').on('change', function (e) {
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"]').each(function (e) {
                $(this).removeAttr("disabled");
                $(this).removeAttr("checked");
                $(this).find('label').css('color', 'red');
            });
            if (this.value !== 'Bloqué') {
                $('form[name="new"] #timsoft_tasksbundle_taskevent_motif').parent().hide();
                if (this.value === 'Done') {
                    $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('checked', 'checked');
                }
                if (this.value === 'To DO') {
                    $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('checked', 'checked');
                }
            } else {
                $('form[name="new"] #timsoft_tasksbundle_taskevent_motif').parent().show();
            }
            progress(this.value);
        });
        $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"]').each(function (e) {
            $(this).next().css('background-color', perc2color(this.value));
        });


        /*-------------DataTable----------*/
        $('.table').dataTable({
            "columns": [
                {"width": "20%", className: "header highlight"},
                {"width": "40%"},
                {"width": "40%"},

            ],
            "autoWidth": false,
            "paging": false,
            "ordering": false,
            "info": false,
            "searching": false
        });

    });

    function progress(value) {
        if (value === 'In Progress') {
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('disabled', 'disabled');
        } else if (value === 'Done') {
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="25"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="50"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="75"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="90"]').attr('disabled', 'disabled');
        } else if (value === 'To DO') {
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="25"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="50"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="75"]').attr('disabled', 'disabled');
            $('form[name="new"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="90"]').attr('disabled', 'disabled');
        }

    }

    function perc2color(perc) {
        var r, g, b = 0;
        if (perc < 50) {
            r = 255;
            g = Math.round(5.1 * perc);
        } else {
            g = 255;
            r = Math.round(510 - 5.10 * perc);
        }
        var h = r * 0x10000 + g * 0x100 + b * 0x1;
        return '#' + ('000000' + h.toString(16)).slice(-6);
    }
</script>
{% form_theme form _self %}

