<style>
    .table td, .table th {
        padding: .49rem;
    }

    .header {
        font-weight: bold;
    }

    a.myErrorClass, ul.myErrorClass, input.myErrorClass, textarea.myErrorClass, select.myErrorClass, span.myErrorClass {
        border-width: 1px !important;
        border-style: solid !important;
        border-color: #cc0000 !important;
        /*border: #cc0000 !important;*/
        background-color: #f3d8d8 !important;
        background-image: url(http://goo.gl/GXVcmC) !important;
        background-position: 50% 50% !important;
        background-repeat: repeat !important;
    }

    label.myErrorClass, div.myErrorClass {
        color: red;
        font-size: 11px;
        /*    font-style: italic;*/
        display: block;
    }
</style>
<div id="editTask" class="modal fade">
    <div class="modal-dialog  modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-gradient-light">
                <h5 id="eventInfo" class="modal-title">Modifier un Task</h5>
                <button type="button" class="close" data-dismiss="modal" id="close"><span
                            aria-hidden="true">×</span> <span
                            class="sr-only">close</span></button>
            </div>{{ form_start(edit_form, { 'name':'edit','method' : 'post', 'action': path('taskevent_edit', {id: taskEvent.id}) }) }}
            <div id="modalBody" class="modal-body">
                <div class="card bg-gradient-light card-outline card-primary card-outline-tabs">
                    <div class="card-header p-0 border-bottom-0">
                        <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="custom-tabs-three-home-tab" data-toggle="pill"
                                   href="#custom-tabs-three-home" role="tab" aria-controls="custom-tabs-three-home"
                                   aria-selected="true">Task</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="custom-tabs-three-profile-tab" data-toggle="pill"
                                   href="#periodicite" role="tab"
                                   aria-controls="custom-tabs-three-profile" aria-selected="false">Périodicité</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content tab-validate" id="custom-tabs-three-tabContent">
                            <div class="tab-pane fade active show" id="custom-tabs-three-home" role="tabpanel"
                                 aria-labelledby="custom-tabs-three-home-tab">
                                <table class="table table-borderless detail" style="width: 100%;">
                                    <tr>
                                        <td>Type</td>
                                        <td>
                                            <div class="form-group" id="type">
                                                {% for key, allDayItem in edit_form.allDay %}
                                                    <div class="icheck-primary d-inline">
                                                        {{ form_widget(allDayItem, {'attr': {'class': 'form-check-input'}}) }}
                                                        {{ form_label(allDayItem) }}
                                                    </div>
                                                {% endfor %}
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group clearfix">
                                                {#{% for key, allDayItem in edit_form.periodique %}#}
                                                {#<div class="icheck-primary d-inline">#}
                                                {#{{ form_widget(allDayItem, {'attr': {'class': 'form-check-input'}}) }}#}
                                                {#{{ form_label(allDayItem) }}#}
                                                {#</div>#}
                                                {#{% endfor %}#}
                                                {{ form_widget(edit_form.periodique) }}
                                                {{ form_label(edit_form.periodique) }}
                                            </div>
                                        </td>
                                    </tr>
                                    <tr id="tempsT">
                                        <td>Date</td>
                                        <td>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text"><i
                                                                class="far fa-calendar-alt"></i></span>
                                                </div>
                                                {{ form_widget(edit_form.start, {'attr': {'class': 'date form-control' , 'autocomplete': 'off'}}) }}
                                            </div>
                                        </td>
                                        <td>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text"><i
                                                                class="far fa-calendar-alt"></i></span>
                                                </div>
                                                {{ form_widget(edit_form.end, {'attr': {'class': 'date form-control' , 'autocomplete': 'off'}}) }}
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Assigner à</td>
                                        <td>
                                            {{ form_widget(edit_form.utilisateur, {'attr': {'class': 'form-control'}}) }}
                                        </td>
                                        <td>
                                            {{ form_widget(edit_form.client, {'attr': {'class': 'form-control'}}) }}
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>Task</td>
                                        <td>{{ form_widget(edit_form.activite, {'attr': {'class': 'form-control'}}) }}</td>
                                        <td>{{ form_widget(edit_form.task, {'attr': {'class': 'form-control'}}) }}</td>
                                    </tr>
                                    <tr>
                                        <td>Statut</td>
                                        <td>{{ form_widget(edit_form.statut, {'attr': {'class': 'form-control'}}) }}</td>
                                        <td>{{ form_widget(edit_form.motif, {'attr': {'class': 'form-control'}}) }}</td>
                                    </tr>
                                    <tr>
                                        <td>Étiquette/Site</td>
                                        <td> {{ form_widget(edit_form.etiquette, {'attr': {'class': 'form-control'}}) }}</td>
                                        <td>{{ form_widget(edit_form.site, {'attr': {'class': 'form-control'}}) }}</td>
                                    </tr>
                                    <tr>
                                        <td>Progression/Rapport</td>
                                        <td>
                                            <div class="form-group">
                                                {% for key, allDayItem in edit_form.progression %}
                                                    {{ form_widget(allDayItem) }}
                                                    <span class="badge"
                                                          style="font-size: 15px">  {{ form_label(allDayItem) }}
                                                    </span>
                                                {% endfor %}
                                            </div>
                                        </td>
                                        <td>{{ form_widget(edit_form.rapport, {'attr': {'class': 'form-control'}}) }}</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="tab-pane fade" id="periodicite" role="tabpanel"
                                 aria-labelledby="custom-tabs-three-profile-tab">
                                <table class="table table-borderless table-sm period">
                                    <tr>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.dtstart) }}
                                                <div class="col-sm-9">
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                    <span class="input-group-text"><i
                                                                class="far fa-calendar-alt"></i></span>
                                                        </div>{{ form_widget(edit_form.dtstart, {'attr': {'class': 'date form-control', 'autocomplete': 'off'}}) }}
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.until) }}
                                                <div class="col-sm-9">
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                    <span class="input-group-text"><i
                                                                class="far fa-calendar-alt"></i></span>
                                                        </div>{{ form_widget(edit_form.until, {'attr': {'class': 'date form-control', 'autocomplete': 'off'}}) }}
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.startTime) }}
                                                <div class="col-sm-9">
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                        </div>{{ form_widget(edit_form.startTime, {'attr': {'class': 'form-control', 'autocomplete': 'off'}}) }}
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.endTime) }}
                                                <div class="col-sm-9">
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                        </div>{{ form_widget(edit_form.endTime, {'attr': {'class': 'form-control', 'autocomplete': 'off'}}) }}
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.freq) }}
                                                <div class="col-sm-9">
                                                    {{ form_widget(edit_form.freq) }}
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="form-group row">
                                                {{ form_label(edit_form.intervale) }}
                                                <div class="col-sm-6">
                                                    {{ form_widget(edit_form.intervale) }}
                                                </div>
                                                <label id="freq" class="col-sm-3">semaine(s)</label>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <div class="form-group row clearfix">
                                                {{ form_label(edit_form.byweekday) }}
                                                <div class="col-sm-9">
                                                    {% for key, allDayItem in edit_form.byweekday %}
                                                        <div class="icheck-primary">
                                                            {{ form_widget(allDayItem, {'attr': {'class': 'form-check-input'}}) }}
                                                            {{ form_label(allDayItem) }}
                                                        </div>
                                                    {% endfor %}
                                                </div>
                                            </div>
                                        </td>
                                        <td></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer bg-gradient-light">
                <button class="btn btn-secondary" data-dismiss="modal">
                    <i class="fas fa-window-close fa-lg"></i>
                </button>
                {% if AutorisationAcces('taskevent_delete' , app.user) %}
                    <a href="#" id="Supprimer{{ taskEvent.id }}" class="btn btn-danger">
                        <i class="fas fa-trash fa-lg"></i>
                    </a>
                {% endif %}
                <button type="submit" class="btn btn-primary"><i class="fas fa-save fa-lg"></i></button>
            </div>
            {{ form_end(edit_form) }}
        </div>
    </div>
</div>
<link rel="stylesheet" type="text/css"
      href="{{ asset('Template2/plugins/datetimepicker-master/build/jquery.datetimepicker.min.css') }}"/>
<script src="{{ asset('Template2/plugins/datetimepicker-master/build/jquery.datetimepicker.full.min.js') }}"></script>
<script>
    var $activive = $('#timsoft_tasksbundle_taskevent_activite');
    // When sport gets selected ...
    $activive.change(function () {
        // ... retrieve the corresponding form.
        var $form = $(this).closest('form');
        // Simulate form data, but only include the selected sport value.
        var data = {};
        data[$activive.attr('name')] = $activive.val();
        // Submit data via AJAX to the form's action path.
        $.ajax({
            url: $form.attr('action'),
            type: $form.attr('method'),
            data: data,
            success: function (html) {
                // Replace current position field ...
                $('#timsoft_tasksbundle_taskevent_task').replaceWith(
                    // ... with the returned one from the AJAX response.
                    $(html).find('#timsoft_tasksbundle_taskevent_task')
                );
                // Position field now displays the appropriate positions.
            }
        });
    });
</script>
<script>
    /*--------------Selectors------------*/
    var byweekday = $("form[name='edit'] input[name='timsoft_tasksbundle_taskevent[byweekday][]']");
    var intervale = $("form[name=\"edit\"] label[for='timsoft_tasksbundle_taskevent_intervale']");
    /*-----------------------------------*/

    $(document).ready(function () {

        $('#timsoft_tasksbundle_taskevent_periodique').parent().addClass('custom-control custom-switch');


        /*----------Validator------------*/

        $('form[name="edit"]').on('submit', function (e) {
            e.preventDefault();
        }).validate({
            ignore: '.date',
            errorPlacement: function (error, element) {

            },
            submitHandler: function (form) {
                if ($('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[periodique]"]').checked == false && (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue')) || ($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').val() == '' && $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').val() == ''))) {
                    // alert('Date non valable, veuillez la vérifier et réessayer');
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'Date non valable, veuillez la vérifier et réessayer',
                    });
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');

                } else if ($('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[periodique]"]').checked == true && (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_dtstart').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_until').datetimepicker('getValue')) || ($('form[name="edit"] #timsoft_tasksbundle_taskevent_dtstart').val() == '' && $('form[name="edit"] #timsoft_tasksbundle_taskevent_until').val() == ''))) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Oops...',
                        text: 'Date non valable, veuillez la vérifier et réessayer',
                    });
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_dtstart').addClass('myErrorClass');
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_until').addClass('myErrorClass');
                } else {
                    $("form[name=\"edit\"] input[type='hidden']").each(function () {
                        console.log($(this).val());
                    });
                    Swal.fire({
                        title: 'Veuillez Patienter !',
                        html: 'Enregistrement de données..',// add html attribute if you want or remove
                        allowOutsideClick: false,
                        onBeforeOpen: () => {
                            Swal.showLoading()
                        },
                    });
                    // event.preventDefault();
                    // var cc = new FormData($('form[name="new"]'));
                    var url = "{{ path('taskevent_edit', {id: taskEvent.id}) }}";
                    // var formSerialize = $('form[name="new"]').serialize();
                    $.ajax({
                        url: url,
                        data: $(form).serialize(),
                        type: 'POST',
                        dataType: "json",
                    }).done(function (response) {
                        Swal.close();
                        if (response.taskExist) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Il existe déjà une autre Task ayant un même créneau!',
                            })
                        } else {
                            Swal.fire({
                                icon: 'success',
                                title: 'Task ajoutée avec succès !',
                                // text: 'Il existe déjà une autre Task ayant un même créneau!',
                            });
                            $('#editTask').modal('hide');
                        }
                    });
                }
            },
            invalidHandler: function () {
                setTimeout(function () {
                    $('.nav-tabs a small.required').remove();
                    $('.nav-tabs a.myErrorClass').removeClass('myErrorClass');
                    var validatePane = $('.tab-content.tab-validate .tab-pane:has(.myErrorClass)').each(function () {
                        var id = $(this).attr('id');
                        $('.nav-tabs').find('a[href^="#' + id + '"]').append(' <small class="required">***</small>');
                        $('.nav-tabs').find('a[href^="#' + id + '"]').addClass('myErrorClass');
                    });
                });
            },
            rules: {},
            errorClass: "myErrorClass",
            highlight: function (element, errorClass, validClass) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().addClass(errorClass);
                } else {
                    elem.addClass(errorClass);
                }
            },

            //When removing make the same adjustments as when adding
            unhighlight: function (element, errorClass, validClass) {
                var elem = $(element);
                if (elem.hasClass("select2-hidden-accessible")) {
                    $("#select2-" + elem.attr("id") + "-container").parent().removeClass(errorClass);
                } else {
                    elem.removeClass(errorClass);
                }
            }
        });

        /*-------------------------------*/

        $.datetimepicker.setLocale('fr');
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').attr('autocomplete', 'off');
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_utilisateur').select2({
            placeholder: 'Assigner à',

        });
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_client').select2({
            placeholder: 'Choisir le client'
        });
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
            format: 'd F Y',
            step: 30,
            // timepicker: false,
            onShow: function (ct) {
                this.setOptions({
                    maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false,
                    formatDate: 'd F Y H:i'
                })
            },
            onChangeDateTime: function (dp, $input) {
                if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                } else {
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                    $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                }
            }
        });
        var allDay = $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[allDay]"]:checked');
        if ($('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[allDay]"]:checked').val() == 1) {
            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                format: 'd F Y',
                timepicker: false,
                onShow: function (ct) {
                    this.setOptions({
                        maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false,
                        formatDate: 'd F Y'
                    })
                },
                onChangeDateTime: function (dp, $input) {
                    if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                        // alert('Date non valable, veuillez la vérifier et réessayer');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                    } else {
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                    }
                }
            });
            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                format: 'd F Y',
                timepicker: false,
                onShow: function (ct) {
                    this.setOptions({
                        minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false,
                        formatDate: 'd F Y'
                    })
                },
                onChangeDateTime: function (dp, $input) {
                    if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                        // alert('Date non valable, veuillez la vérifier et réessayer');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                    } else {
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                    }
                }
            });
        } else {
            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                format: 'd F Y H:i',
                timepicker: true,
                step: 30,
                onShow: function (ct) {
                    this.setOptions({
                        maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false
                        , formatDate: 'd F Y H:i'
                    })
                },
                onChangeDateTime: function (dp, $input) {
                    if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                        // alert('Date non valable, veuillez la vérifier et réessayer');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                    } else {
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                    }
                }
            });

            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                format: 'd F Y H:i',
                timepicker: true,
                step: 30,
                onShow: function (ct) {
                    this.setOptions({
                        minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false
                        , formatDate: 'd F Y H:i'
                    })
                },
                onChangeDateTime: function (dp, $input) {
                    if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                        // alert('Date non valable, veuillez la vérifier et réessayer');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                    } else {
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                    }
                }
            });
        }
        $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[allDay]"]').change(function () {
            if (this.value == 1) {
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                    format: 'd F Y',
                    timepicker: false,
                    onShow: function (ct) {
                        this.setOptions({
                            maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false,
                            formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                    format: 'd F Y',
                    timepicker: false,
                    onShow: function (ct) {
                        this.setOptions({
                            minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false,
                            formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="v"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
            } else {
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker({
                    format: 'd F Y H:i',
                    timepicker: true,
                    step: 30,
                    onShow: function (ct) {
                        this.setOptions({
                            maxDate: $('#timsoft_tasksbundle_taskevent_end').val() ? $('#timsoft_tasksbundle_taskevent_end').val() : false
                            , formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="new"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker({
                    format: 'd F Y H:i',
                    timepicker: true,
                    step: 30,
                    onShow: function (ct) {
                        this.setOptions({
                            minDate: $('#timsoft_tasksbundle_taskevent_start').val() ? $('#timsoft_tasksbundle_taskevent_start').val() : false
                            , formatDate: 'd F Y H:i'
                        })
                    },
                    onChangeDateTime: function (dp, $input) {
                        if (new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_start').datetimepicker('getValue')) > new Date($('form[name="edit"] #timsoft_tasksbundle_taskevent_end').datetimepicker('getValue'))) {
                            // alert('Date non valable, veuillez la vérifier et réessayer');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').addClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').addClass('is-invalid');
                        } else {
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').removeClass('is-invalid');
                            $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').removeClass('is-invalid');
                        }
                    }
                });
            }
        });
        var $statut = $('form[name="edit"] #timsoft_tasksbundle_taskevent_statut');
        if ($statut.val() !== 'Bloqué') {
            $('form[name="edit"] #timsoft_tasksbundle_taskevent_motif').parent().hide();
        }
        $statut.on('change', function (e) {
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"]').each(function (e) {
                $(this).removeAttr("disabled");
                $(this).removeAttr("checked");
                $(this).find('label').css('color', 'red');
            });
            if (this.value !== 'Bloqué') {
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_motif').parent().hide();
                if (this.value === 'Done') {
                    $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('checked', 'checked');
                }
                if (this.value === 'To DO') {
                    $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('checked', 'checked');
                }
            } else {
                $('form[name="edit"] #timsoft_tasksbundle_taskevent_motif').parent().show();
            }
            progress(this.value);
        });
        progress('{{ taskEvent.statut }}');
        $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"]').each(function (e) {
            $(this).next().css('background-color', perc2color(this.value));
            // $('<span></span>').append($(this).next());
            // console.log($(this).next());
        });


        /* -----------Suppression----------- */
        $("#Supprimer" + '{{ taskEvent.id }}').click(function () {
            Swal.fire({
                title: 'Souhaitez-vous réellement supprimer cette Task?',
                // text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Oui, supprimez-la!',
                cancelButtonText: 'Annuler',
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: '{{ path('taskevent_delete', {id: taskEvent.id}) }}',
                        type: "POST",
                        //   async: false,
                        success: function (data) {
                            $('#editTask').modal('hide');
                            Swal.fire(
                                'Supprimé!',
                                'La Task a été supprimée.',
                                'success'
                            );
                        },
                        error: function () {
                            alert("Vous ne pouvez pas faire cette action");
                        },

                    });
                }
            });
        });
        /*-----------------------------------*/

        /*-------------DataTable----------*/
        $('.detail').dataTable({
            "columns": [
                {"width": "20%", className: "header highlight"},
                {"width": "40%"},
                {"width": "40%"},

            ],
            "autoWidth": false,
            "paging": false,
            "ordering": false,
            "info": false,
            "searching": false
        });
        $('.period').dataTable({
            "columns": [
                // {"width": "20%", className: "header highlight"},
                {"width": "50%"},
                {"width": "50%"},

            ],
            "autoWidth": false,
            "paging": false,
            "ordering": false,
            "info": false,
            "searching": false
        });
        /*--------------------------------*/

        /*------------Periodique-----------*/
        $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[periodique]"]').change(function () {
            if (this.checked == false) {
                hidePeriod();
            } else {
                showPeriod();
            }
        });
        if ($('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[periodique]"]:checked').val() == 1) {
            showPeriod();
            if ($('form[name="edit"] #timsoft_tasksbundle_taskevent_freq').val() === "monthly") {
                $('#freq').text('moi(s)');
                $('#timsoft_tasksbundle_taskevent_intervale').parent().parent().children('label.col-sm-3.col-form-label').text('Tous les');
                byweekday.each(function (index) {
                    console.log($(this));
                    $(this).hide();
                    $(this).next('label').hide();
                });
                byweekday.parent().parent().parent().first().hide();
                byweekday.each(function () {
                    this.checked = false;
                });
            } else {
                $('#freq').text('semaine(s)');
                $('#timsoft_tasksbundle_taskevent_intervale').parent().parent().children('label.col-sm-3.col-form-label').text('Toutes les');
                byweekday.each(function (index) {
                    $(this).show();
                    $(this).next('label').show();
                });
                byweekday.parent().parent().parent().first().show();
            }
        } else {
            hidePeriod();
        }
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_freq').on('change', function (e) {
            if ($(this).val() == 'monthly') {
                $('#freq').text('moi(s)');
                $('#timsoft_tasksbundle_taskevent_intervale').parent().parent().children('label.col-sm-3.col-form-label').text('Tous les');
                byweekday.each(function (index) {
                    console.log($(this));

                    $(this).hide();
                    $(this).next('label').hide();
                });
                byweekday.parent().parent().parent().first().hide();
                byweekday.each(function () {
                    this.checked = false;
                });
            } else {
                $('#freq').text('semaine(s)');
                $('#timsoft_tasksbundle_taskevent_intervale').parent().parent().children('label.col-sm-3.col-form-label').text('Toutes les');
                byweekday.each(function (index) {
                    $(this).show();
                    $(this).next('label').show();
                });
                byweekday.parent().parent().parent().first().show();

            }
        });

        /*--------------------------------*/

    });

    function progress(value) {
        if (value === 'In Progress') {
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('disabled', 'disabled');
        } else if (value === 'Done') {
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="0"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="25"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="50"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="75"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="90"]').attr('disabled', 'disabled');
        } else if (value === 'To DO') {
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="100"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="25"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="50"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="75"]').attr('disabled', 'disabled');
            $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[progression]"][value="90"]').attr('disabled', 'disabled');
        }

    }

    function perc2color(perc) {
        var r, g, b = 0;
        if (perc < 50) {
            r = 255;
            g = Math.round(5.1 * perc);
        } else {
            g = 255;
            r = Math.round(510 - 5.10 * perc);
        }
        var h = r * 0x10000 + g * 0x100 + b * 0x1;
        return '#' + ('000000' + h.toString(16)).slice(-6);
    }

    function hidePeriod() {
        $('#custom-tabs-three-profile-tab').hide();
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_freq').hide();
        $("form[name=\"edit\"] label[for='timsoft_tasksbundle_taskevent_freq']").hide();
        intervale.hide();
        intervale.hide();
        byweekday.each(function (index) {
            $(this).hide();
            $(this).next('label').hide();
        });
        byweekday.parent().parent().parent().first().hide();
        intervale.prop('required', false);
        $('#freq').hide();
        $('#tempsT').show();
        $('#type').show();
        // $('form[name="new"] #timsoft_tasksbundle_taskevent_start').parent().appendTo('#tempsT');
    }

    function showPeriod() {
        $('#custom-tabs-three-profile-tab').show();
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_freq').show();
        $("form[name=\"edit\"] label[for='timsoft_tasksbundle_taskevent_freq']").show();
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_intervale').show();
        intervale.show();
        byweekday.each(function (index) {
            $(this).show();
            $(this).next('label').show();
        });
        byweekday.parent().parent().parent().first().show();
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_intervale').prop('required', true);
        // $('form[name="new"] #timsoft_tasksbundle_taskevent_dtstart').rules('add', 'required');
        $('#freq').show();

        /*-------------Date------------*/
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_dtstart').datetimepicker({
            format: 'd F Y',
            timepicker: false,
            onShow: function (ct) {
                this.setOptions({
                    maxDate: $('#timsoft_tasksbundle_taskevent_until').val() ? $('#timsoft_tasksbundle_taskevent_until').val() : false,
                    formatDate: 'd F Y'
                })
            },
            onChangeDateTime: function (dp, $input) {
            }
        });
        // $('form[name="new"] #timsoft_tasksbundle_taskevent_dtstart').prop('required', true);

        // $('form[name="new"] #timsoft_tasksbundle_taskevent_dtstart').datetimepicker(validate);
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_until').datetimepicker({
            format: 'd F Y',
            timepicker: false,
            onShow: function (ct) {
                this.setOptions({
                    minDate: $('#timsoft_tasksbundle_taskevent_dtstart').val() ? $('#timsoft_tasksbundle_taskevent_dtstart').val() : false,
                    formatDate: 'd F Y'
                })
            },
            onChangeDateTime: function (dp, $input) {
            }
        });
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_startTime').datetimepicker({
            datepicker: false,
            step: 30,
            format: 'H:i',
            onShow: function (ct) {
                this.setOptions({
                    maxTime: $('#timsoft_tasksbundle_taskevent_endTime').val() ? $('#timsoft_tasksbundle_taskevent_endTime').val() : false,
                })
            },
        });
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_endTime').datetimepicker({
            datepicker: false,
            step: 30,
            format: 'H:i',
            onShow: function (ct) {
                this.setOptions({
                    minTime: $('#timsoft_tasksbundle_taskevent_startTime').val() ? $('#timsoft_tasksbundle_taskevent_startTime').val() : false,
                })
            },
        });
        $('form[name="edit"] input[name="timsoft_tasksbundle_taskevent[allDay]"][value="0"]').attr('checked', 'checked');
        $('#tempsT').hide();
        $('#type').hide();
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_start').val('');
        $('form[name="edit"] #timsoft_tasksbundle_taskevent_end').val('');
    }
</script>
