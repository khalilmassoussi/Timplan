<?php

namespace TimSoft\GeneralBundle\Repository;

/**
 * FeuilleDePresenceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FeuilleDePresenceRepository extends \Doctrine\ORM\EntityRepository
{
//     public function getFeuilleSansRapport() {
// 
//        return createQuery('SELECT f FROM TimSoftGeneralBundle:FeuilleDePresence f  '
//                . 'WHERE f.id  NOT IN ( select r.FeuilleDePresence FROM TimSoftGeneralBundle:Rapport r)');
//}
    
     public function getFeuilleSansRapport() {
 
         return  $this->createQueryBuilder('f')
                        ->where('f.id NOT IN (select IDENTITY(r.FeuilleDePresence) FROM TimSoftGeneralBundle:RapportIntervention r)')
                        ->orderBy('f.dateIntervention', 'ASC');
      }
      
    public function getNBFeuille() {
 
        return intval($this->createQueryBuilder('f')
                        ->select('COUNT(f)')
                        ->getQuery()
                        ->getSingleScalarResult());
    }
    
    public function getNBFeuilleParValidation($validation) {
 
        return intval($this->createQueryBuilder('f')
                        ->select('COUNT(f)')
                        ->where('f.statutValidation =  :validation')
                        ->setParameter('validation', $validation)
                        ->getQuery()
                        ->getSingleScalarResult());
    }
    
    public function getFeuilleParValidation($validation) {
 
        return $this->createQueryBuilder('f')
                        ->select('f')
                        ->where('f.statutValidation =  :validation')
                        ->setParameter('validation', $validation)
                        ->getQuery()
                        ->getResult();
    }
    
    //Pour extraire les feuille d'un client
    public function getFeuilleParClient($Client) {
 
        return $this->createQueryBuilder('f')
                        ->select('f')
                        ->where('f.client = :Client')
                        ->setParameter('Client', $Client)
                        ->getQuery()
                        ->getResult();
    }
    
    
    //Pour extraire les feuille selon leur validitÃ© et le eclient
    public function getFeuilleParValidationParClient($validation, $Client) {
 
        return $this->createQueryBuilder('f')
                        ->select('f')
                        ->where('f.statutValidation =  :validation')
                        ->andWhere('f.client = :Client')
                        ->setParameter('validation', $validation)
                        ->setParameter('Client', $Client)
                        ->getQuery()
                        ->getResult();
    }
    
    //Feuille de presence selon Consultant
    public function getFeuilleParConsultant($Consultant) {
        return $this->createQueryBuilder('f')
                        ->select('f')
                        ->where('f.intervenant =  :Intervenant')
                        ->setParameter('Intervenant', $Consultant)
                        ->getQuery()
                        ->getResult();
        
    }
    
    //Feuille de presence selon Consultant et le statut de validation
    public function getFeuilleParStatutParConsultant($Consultant,$validation) {
 
        return $this->createQueryBuilder('f')
                        ->select('f')
                        ->where('f.intervenant =  :Intervenant')
                        ->andWhere('f.statutValidation =  :validation')
                        ->setParameter('Intervenant', $Consultant)
                        ->setParameter('validation', $validation)
                        ->getQuery()
                        ->getResult();
    }
    
//    public function getFeuilleParVallidationParClient($validation,$Client) {
// 
//         return $this->createQueryBuilder('f')
//                        ->select('f')
//                        ->where('f.statutValidation =  :validation')
//                        ->andWhere('f.client = :Client')
//                        ->setParameter('Client', $Client)
//                        ->setParameter('validation', $validation)
//                        ->getQuery()
//                        ->getResult();
//       
//    }
}


 