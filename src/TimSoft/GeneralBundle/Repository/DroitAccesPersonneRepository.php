<?php

namespace TimSoft\GeneralBundle\Repository;

use Doctrine\ORM\NonUniqueResultException;

/**
 * DroitAccesPersonneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DroitAccesPersonneRepository extends \Doctrine\ORM\EntityRepository
{
     public function getAutorisationPersonne($Route,$IDUtilisateur) 
    {
        $ID = $this->getEntityManager()->getRepository('TimSoftGeneralBundle:DroitAcces')->getID($Route);

        try {
            return $this->createQueryBuilder('g')
                ->select('g.autorisation')
                ->where('g.droit =  :ID')
                ->andWhere('g.utilisateur = :Utilisateur')
                ->setParameter('ID', $ID)
                ->setParameter('Utilisateur', $IDUtilisateur)
                ->getQuery()
                ->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
        }
    }

    public function contientException($ID,$Role){
        
        return intval($this->createQueryBuilder('p')
                        ->select('COUNT(p)')
                        ->where('p.droit = :ID')
                        ->andWhere('p.roleUtilisateur = :Role')
                        ->setParameter('ID', $ID)
                        ->setParameter('Role', $Role)        
                        ->getQuery()
                        ->getSingleScalarResult());
    }
    
    public function getPersonneExceptionnelle($ID,$Autorisation) 
    {
        return $this->createQueryBuilder('p')
                        ->select('u')
                        ->from('TimSoftGeneralBundle:Utilisateur', 'u')
                        ->where('p.droit =  :ID')
                        ->andWhere('u.id =  p.utilisateur')
                        ->andWhere('p.autorisation =  :Autorisation ')
                        ->setParameter('ID', $ID)
                        ->setParameter('Autorisation', $Autorisation)
                        ->getQuery()
                        ->getResult();
    }
}
